scalar DateTime

type Query {
  me: User
  users: [User!]!
}

type Mutation {
  signup(
    email: String!, 
    password: String!, 
    firstname: String!, 
    lastname: String!, 
    phoneNumber:String!, 
    dateOfBirth: DateTime!
    ): AuthPayload!

  login(email: String!, password: String!): AuthPayload!

  sendOtp(querier: String!): SendOtpPayload!

  sendRegistrationOtp(querier: String!): SendOtpPayload!
  
  verifyOtp(querier: String!, code: String!): OtpVerificationPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  firstname: String!
  lastname: String!
  phoneNumber: String!
  dateOfBirth: String!
}

type SendOtpPayload {
  message: String!
  code: String!
}

type OtpVerificationPayload {
  isValid: Boolean!
  message: String!
}